# -*- coding: utf-8 -*-
"""Speed_Dating.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hUBYjjNr3itkrOMzRcdJjYvw0HjF3gcN

# Projet Speed_Dating

##### L ' objectif de ce challenge est de  comprendre ce qu'il se passe durant un speed dating et surtout de comprendre ce qui va influencer l'obtention d'un deuxième date.
"""

# Import des libraires
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns

# Import du dataset
Speed_dating = pd.read_csv('Speed Dating Data.csv', encoding="ISO-8859-1")
Speed_dating.head(10)

"""#### Graphique montrant la proportion du nombre de personne par tranche d'age"""

sns.countplot(y='age', data=Speed_dating)

Speed_dating.columns

Speed_dating.dtypes

# Importante caractéristiques

carac = [
    ['iid', 'int16'],
    ['gender', 'bool'],
    ['wave', 'int16'],
    ['position', 'int16'],
    ['order', 'int16'],
    ['pid', 'int16'],
    ['age_o', 'int16'],
    ['race_o', 'category'],
    ['pf_o_att', 'int16'],
    ['pf_o_sin', 'int16'],
    ['pf_o_int', 'int16'],
    ['pf_o_fun', 'int16'],
    ['pf_o_amb', 'int16'],
    ['pf_o_sha', 'int16'],
    ['dec_o', 'bool'],
    ['attr_o', 'int16'],
    ['sinc_o', 'int16'],
    ['intel_o', 'int16'],
    ['fun_o', 'int16'],
    ['amb_o', 'int16'],
    ['shar_o', 'int16'],
    ['like_o', 'int16'],
    ['prob_o', 'int16'],
    ['met_o', 'bool'],
    ['age', 'int16'],
    ['field_cd', 'category'],
    ['race', 'category'],
    ['imprace', 'int16'],
    ['imprelig', 'int16'],
    ['goal', 'category'],
    ['date', 'int16'],
    ['go_out', 'int16'],
    ['career_c', 'category'],
    ['sports', 'int16'],
    ['tvsports', 'int16'],
    ['exercise', 'int16'],
    ['dining', 'int16'],
    ['museums', 'int16'],
    ['art', 'int16'],
    ['hiking', 'int16'],
    ['gaming', 'int16'],
    ['clubbing', 'int16'],
    ['reading', 'int16'],
    ['tv', 'int16'],
    ['theater', 'int16'],
    ['movies', 'int16'],
    ['concerts', 'int16'],
    ['music', 'int16'],
    ['shopping', 'int16'],
    ['yoga', 'int16'],
    ['exphappy', 'int16'],
    ['expnum', 'int16'],
    ['attr1_1', 'int16'],
    ['sinc1_1', 'int16'],
    ['intel1_1', 'int16'],
    ['fun1_1', 'int16'],
    ['amb1_1', 'int16'],
    ['shar1_1', 'int16'],
    ['attr3_1', 'int16'],
    ['sinc3_1', 'int16'],
    ['fun3_1', 'int16'],
    ['intel3_1', 'int16'],
    ['amb3_1', 'int16'],
    ['dec', 'bool'],
    ['attr', 'int16'],
    ['sinc', 'int16'],
    ['intel', 'int16'],
    ['fun', 'int16'],
    ['amb', 'int16'],
    ['shar', 'int16'],
    ['like', 'int16'],
    ['prob', 'int16'],
    ['met', 'int16'],
    ['match_es', 'int16'],
    ['satis_2', 'int16'],
    ['length', 'int16'],
    ['numdat_2', 'int16']
]


data = Speed_dating[[c[0] for c in carac]]

print(data)

Speed_dating.gender.value_counts()

data.iid.value_counts(dropna=True)

data.isnull().sum()

dating = data.dropna()
dating = dating.drop_duplicates().copy()
dating.iid.value_counts()

"""#### Proportion de personne par genre"""

sns.countplot(x='gender', data=dating)
dating.gender.value_counts(dropna=False)

"""#### Proportion de personne qui match par speed dating?"""

sns.countplot(x='match_es', data=dating)

race = ['Noir_africain et noir_américain','Europeen','Latino',
        'Asie_Pacific Americain_asiatique','Americain native','Autres']
g = plt.figure(figsize=(10,10))
g = sns.countplot(x="race",data=dating, hue='gender')
sns.countplot(x='race', data=dating)

dating.columns

dating['age_different'] = abs(dating['age'] - dating['age_o'])
print(dating)

"""#### Représentation du nombre de personne qui ont matché par difference d'âge"""

sns.relplot(y="match_es", x="age_different", data=dating, kind="line")

"""#### Quels sont les objectifs (par genre) de participer à ces evenement?"""

goal = ['Faire une rencontre amusante pour une nuit','Rencontrer 1 nouvelle personne','Pour avoir un RDV','Rechercher une relation serieuse',
        'Pour dire que je les fait','Autres']
g = plt.figure(figsize=(5,5))
g = sns.countplot(y="goal",data=dating, hue='gender')
g.set(yticklabels=goal)
g = plt.yticks(rotation=0,fontsize=15)

"""#### Quels sont les origines des personnes qui vont aux dates?"""

race = ['Noir_africain et noir_américain','Europeen','Latino',
        'Asie_Pacific Americain_asiatique','Americain native','Autres']
g = plt.figure(figsize=(5,5))
g = sns.countplot(y="race",data=dating, hue='gender')
g.set(yticklabels=race)
g = plt.yticks(rotation=0,fontsize=10)